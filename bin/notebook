#!/bin/bash

# Navigate to the parent directory of the bin folder
cd "$(dirname "$0")"/..

# Set the environment name and the requirements file
ENV_NAME="env"
REQUIREMENTS_FILE="requirements.txt"
VARIABLES_FILE="variables.json"

# Create virtual environment if it doesn't exist
if [ ! -d "$ENV_NAME" ]; then
  echo "Creating virtual environment '$ENV_NAME'..."
  python3 -m venv "$ENV_NAME"
fi

# Activate the virtual environment
source "$ENV_NAME/bin/activate"

# Install dependencies if not already installed
if [ -f "$REQUIREMENTS_FILE" ]; then
  echo "Installing dependencies from $REQUIREMENTS_FILE..."
  pip install -r "$REQUIREMENTS_FILE"
else
  echo "No requirements.txt found, skipping installation of dependencies."
fi

# Check if variables.json exists
if [ ! -f "$VARIABLES_FILE" ]; then
  echo "Error: $VARIABLES_FILE not found!"
  exit 1
fi

# Extract the notebook_password from variables.json
NOTEBOOK_PASSWORD=$(jq -r '.notebook_password' "$VARIABLES_FILE")

if [ -z "$NOTEBOOK_PASSWORD" ]; then
  echo "Error: notebook_password not found in $VARIABLES_FILE!"
  exit 1
fi

# Hash the password using Jupyter's password hashing function
HASHED_PASSWORD=$(python3 -c "from jupyter_server.auth.security import passwd; print(passwd('$NOTEBOOK_PASSWORD'))")

# Launch Jupyter Notebook on port 5000, locked down to the parent directory of bin/
jupyter notebook --port=5000 --no-browser --ip=0.0.0.0 --notebook-dir="$(pwd)" --NotebookApp.password="$HASHED_PASSWORD"
